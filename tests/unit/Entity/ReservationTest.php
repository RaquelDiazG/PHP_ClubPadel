<?php

namespace AppBundle\Entity;

/**
 * Generated by PHPUnit_SkeletonGenerator
 */
class ReservationTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Reservation
     */
    protected $reservation;

    /**
     * @var Court
     */
    protected $court;

    /**
     * @var User
     */
    protected $user;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->reservation = new Reservation("15-11-2015T12:30:00");
        $this->court = new Court(false);
        $this->user = new User("user1", "user1@upm.es", "123", array("rol1"));
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }

    /**
     * Implement testConstructor
     *
     * @covers AppBundle\Entity\Reservation::__construct
     * @covers AppBundle\Entity\Reservation::getId
     * @covers AppBundle\Entity\Reservation::getDatetime
     */
    public function testConstructor() {
        $this->assertEmpty($this->reservation->getId());
        $this->assertNotEmpty($this->reservation->getDatetime());
    }

    /**
     * @covers AppBundle\Entity\Reservation::getId
     * Implement testGetId().
     */
    public function testGetId() {
        $this->assertEmpty($this->reservation->getId());
    }

    /**
     * @covers AppBundle\Entity\Reservation::setDatetime
     * Implement testSetDatetime().
     */
    public function testSetDatetime() {
        $this->assertNotEmpty($this->reservation->getDatetime());
        $this->reservation->setDatetime("15-11-2015T12:30:00");
        $this->assertNotEmpty($this->reservation->getDatetime());
        $this->assertEquals("15-11-2015T12:30:00", $this->reservation->getDatetime());
    }

    /**
     * @covers AppBundle\Entity\Reservation::getDatetime
     * Implement testGetDatetime().
     */
    public function testGetDatetime() {
        $this->assertEquals("15-11-2015T12:30:00", $this->reservation->getDatetime());
    }

    /**
     * @covers AppBundle\Entity\Reservation::setCourt
     * Implement testSetCourt().
     */
    public function testSetCourt() {
        $this->assertEmpty($this->reservation->getCourt());
        $this->reservation->setCourt($this->court);
        $this->assertNotEmpty($this->reservation->getCourt());
    }

    /**
     * @covers AppBundle\Entity\Reservation::getCourt
     * Implement testGetCourt().
     */
    public function testGetCourt() {
        $this->assertEmpty($this->reservation->getCourt());
    }

    /**
     * @covers AppBundle\Entity\Reservation::setUser
     * Implement testSetUser().
     */
    public function testSetUser() {
        $this->assertEmpty($this->reservation->getUser());
        $this->reservation->setUser($this->user);
        $this->assertNotEmpty($this->reservation->getUser());
    }

    /**
     * @covers AppBundle\Entity\Reservation::getUser
     * Implement testGetUser().
     */
    public function testGetUser() {
        $this->assertEmpty($this->reservation->getUser());
    }

}
